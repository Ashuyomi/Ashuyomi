import org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile

import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.mikepenz.aboutlibraries.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.github.zellius.shortcut-helper'
// Realm (EH)
apply plugin: 'realm-android'

shortcutHelper.filePath = './shortcuts.xml'

ext {
    // Git is needed in your system PATH for these commands to work.
    // If it's not installed, you can return a random value as a workaround
    getCommitCount = {
        return 'git rev-list --count HEAD'.execute().text.trim()
        // return "1"
    }

    getGitSha = {
        return 'git rev-parse --short HEAD'.execute().text.trim()
        // return "1"
    }

    getBuildTime = {
        def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
        df.setTimeZone(TimeZone.getTimeZone("UTC"))
        return df.format(new Date())
    }
}

android {
    compileSdkVersion AndroidConfig.compileSdk
    buildToolsVersion AndroidConfig.buildTools

    defaultConfig {
        applicationId "eu.kanade.tachiyomi.sy"
        minSdkVersion AndroidConfig.minSdk
        targetSdkVersion AndroidConfig.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 7
        versionName "1.2.0"

        buildConfigField "String", "COMMIT_COUNT", "\"${getCommitCount()}\""
        buildConfigField "String", "COMMIT_SHA", "\"${getGitSha()}\""
        buildConfigField "String", "BUILD_TIME", "\"${getBuildTime()}\""
        buildConfigField "boolean", "INCLUDE_UPDATER", "true"

        multiDexEnabled true

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        debug {
            versionNameSuffix "-${getCommitCount()}"
            applicationIdSuffix ".debug"
        }
        releaseTest {
            applicationIdSuffix ".rt"
//            minifyEnabled true
//            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        standard {
            buildConfigField "boolean", "INCLUDE_UPDATER", "true"
            dimension "default"
        }
        fdroid {
            dimension "default"
        }
        dev {
            resConfigs "en", "xxhdpi"
            dimension "default"
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/*.kotlin_module'

        // Compatibility for two RxJava versions (EXH)
        exclude 'META-INF/rxjava.properties'
    }

    dependenciesInfo {
        includeInApk = false
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'

        abortOnError false
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

androidExtensions {
    experimental = true
}

dependencies {

    // AndroidX libraries
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.biometric:biometric:1.1.0-alpha02'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.core:core-ktx:1.4.0-alpha01'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha05'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'

    final lifecycle_version = '2.3.0-alpha07'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Job scheduling
    final work_version = '2.5.0-alpha01'
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // UI library
    implementation 'com.google.android.material:material:1.3.0-alpha02'

    standardImplementation 'com.google.firebase:firebase-core:17.5.0'

    // ReactiveX
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'com.jakewharton.rxrelay:rxrelay:1.2.0'
    implementation 'com.github.pwittchen:reactivenetwork:0.13.0'

    // Network client
    final okhttp_version = '4.8.1'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-dnsoverhttps:$okhttp_version"
    implementation 'com.squareup.okio:okio:2.8.0'

    // TLS 1.3 support for Android < 10
    implementation 'org.conscrypt:conscrypt-android:2.5.0'

    // REST
    final retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"

    // JSON
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'

    // JavaScript engine
    implementation 'com.squareup.duktape:duktape-android:1.3.0'

    // Disk
    implementation 'com.jakewharton:disklrucache:2.0.2'
    implementation 'com.github.inorichi:unifile:e9ee588'
    implementation 'com.github.inorichi:junrar-android:634c1f5'

    // HTML parser
    implementation 'org.jsoup:jsoup:1.13.1'

    // [EXH] Android 7 SSL Workaround
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'

    // Changelog
    implementation 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'

    // Database
    implementation 'androidx.sqlite:sqlite:2.1.0'
    implementation 'com.github.inorichi.storio:storio-common:8be19de@aar'
    implementation 'com.github.inorichi.storio:storio-sqlite:8be19de@aar'
    implementation 'io.requery:sqlite-android:3.32.2'

    // Preferences
    implementation 'com.github.tfcporciuncula:flow-preferences:1.3.1'

    // Model View Presenter
    final nucleus_version = '3.0.0'
    implementation "info.android15.nucleus:nucleus:$nucleus_version"
    implementation "info.android15.nucleus:nucleus-support-v7:$nucleus_version"

    // Dependency injection
    implementation "com.github.inorichi.injekt:injekt-core:65b0440"

    // Image library
    final glide_version = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation 'com.github.tachiyomiorg:subsampling-scale-image-view:bff2806'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Crash reports
    //implementation 'ch.acra:acra-http:5.7.0'

    // Sort
    implementation 'com.github.gpanther:java-nat-sort:natural-comparator-1.1'

    // UI
    implementation 'com.dmitrymalkovich.android:material-design-dimens:1.4'
    implementation 'com.github.dmytrodanylyk.android-process-button:library:1.0.4'
    implementation 'eu.davidea:flexible-adapter:5.1.0'
    implementation 'eu.davidea:flexible-adapter-ui:1.0.0'
    implementation 'com.nononsenseapps:filepicker:2.5.2'
    implementation 'com.nightlynexus.viewstatepageradapter:viewstatepageradapter:1.1.0'
    implementation 'com.github.mthli:Slice:v1.3'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.github.carlosesco:DirectionalViewPager:a844dbca0a'

    // 3.2.0+ introduces weird UI blinking or cut off issues on some devices
    final material_dialogs_version = '3.1.1'
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:input:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:datetime:$material_dialogs_version"

    // Conductor
    implementation 'com.bluelinelabs:conductor:2.1.5'
    implementation("com.bluelinelabs:conductor-support:2.1.5") {
        exclude group: "com.android.support"
    }
    implementation 'com.github.tachiyomiorg:conductor-support-preference:1.1.1'

    // FlowBinding
    final flowbinding_version = '0.12.0'
    implementation "io.github.reactivecircus.flowbinding:flowbinding-android:$flowbinding_version"
    implementation "io.github.reactivecircus.flowbinding:flowbinding-appcompat:$flowbinding_version"
    implementation "io.github.reactivecircus.flowbinding:flowbinding-recyclerview:$flowbinding_version"
    implementation "io.github.reactivecircus.flowbinding:flowbinding-swiperefreshlayout:$flowbinding_version"
    implementation "io.github.reactivecircus.flowbinding:flowbinding-viewpager:$flowbinding_version"

    // Licenses
    // NOTE: REMEMBER TO UPDATE GRADLE PLUGIN
    implementation 'com.mikepenz:aboutlibraries:8.3.0'

    // Tests
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation 'org.mockito:mockito-core:1.10.19'

    final robolectric_version = '3.1.4'
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.robolectric:shadows-multidex:$robolectric_version"
    testImplementation "org.robolectric:shadows-play-services:$robolectric_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$BuildPluginsVersion.KOTLIN"

    // SY for mangadex utils
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.0.0-RC"


    final coroutines_version = '1.3.9'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // For detecting memory leaks; see https://square.github.io/leakcanary/
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    // Text distance (EH)
    implementation 'info.debatty:java-string-similarity:1.2.1'

    // Firebase (EH)
    implementation 'com.google.firebase:firebase-analytics-ktx:17.5.0'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.2.1'

    // Better logging (EH)
    implementation 'com.elvishew:xlog:1.6.1'

    // Debug utils (EH)
    final def debug_overlay_version = '1.1.3'
    debugImplementation "com.ms-square:debugoverlay:$debug_overlay_version"
    releaseTestImplementation "com.ms-square:debugoverlay:$debug_overlay_version"
    releaseImplementation "com.ms-square:debugoverlay-no-op:$debug_overlay_version"
    testImplementation "com.ms-square:debugoverlay-no-op:$debug_overlay_version"

    // Humanize (EH) used for E-Hentai updater statistics
    implementation 'com.github.mfornos:humanize-slim:1.2.2'

    // RatingBar (SY)
    implementation 'me.zhanghai.android.materialratingbar:library:1.3.1'

    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    final def markwon_version = '4.5.1'

    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:ext-strikethrough:$markwon_version"
    implementation "io.noties.markwon:ext-tables:$markwon_version"
    implementation "io.noties.markwon:html:$markwon_version"
    implementation "io.noties.markwon:image:$markwon_version"
    implementation "io.noties.markwon:linkify:$markwon_version"

    implementation 'com.google.guava:guava:29.0-android'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$BuildPluginsVersion.KOTLIN"
    }
}

repositories {
    mavenCentral()
}

// See https://kotlinlang.org/docs/reference/experimental.html#experimental-status-of-experimental-api-markers
tasks.withType(AbstractKotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.Experimental"]
}

// Duplicating Hebrew string assets due to some locale code issues on different devices
task copyResources(type: Copy) {
    from './src/main/res/values-he'
    into './src/main/res/values-iw'
    include '**/*'
}

preBuild.dependsOn(ktlintFormat, copyResources)

if (!getGradle().getStartParameter().getTaskRequests().toString().contains("Dev")) {
    apply plugin: 'com.google.gms.google-services'
    // Firebase Crashlytics
    apply plugin: 'com.google.firebase.crashlytics'
}
